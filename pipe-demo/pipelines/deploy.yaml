trigger:
- master

variables:

  azureSubscription: '554523c4-57ce-4a99-9cf0-316a3dd07613'
  srcFolder: 'pipe-demo'
  webAppNameDev: 'react-deploy-dev'
  environmentNameDev: 'react-deploy-dev'
  webAppNameQA: 'react-deploy-qa'
  environmentNameQA: 'react-deploy-qa'
  webAppNamePrd: 'react-deploy-prd'
  environmentNamePrd: 'react-deploy-prd'
  vmImageName: 'ubuntu-latest'

stages:
  - stage: buildDev
    displayName: 'Build React App'

    jobs:
      - job: 'build_and_test'
        variables:
          REACT_APP_HELLO: 'Running on dev'
        steps:
          - task: NodeTool@0
            inputs: 
              versionSpec: '10.x'
        
          - script: |
              cd $(srcFolder)
              npm install
              npm run build          
            displayName: 'Install and Build'

          - task: CopyFiles@2
            displayName: 'Copy build output'
            inputs:
              SourceFolder: '$(srcFolder)/build'
              Contents: '**/*'
              TargetFolder: '$(Build.ArtifactStagingDirectory)'

          - task: ArchiveFiles@2
            displayName: 'Archive output'
            inputs:
              rootFolderOrFile: $(Build.ArtifactStagingDirectory)
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).dev.zip'
              includeRootFolder: false

          - task: PublishBuildArtifacts@1
            inputs:
              pathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).dev.zip'

  - stage: deployDev
    displayName: 'Deploy Dev'
    dependsOn: buildDev
    condition: succeeded()

    jobs:
      - deployment: deploy
        displayName: Deploy to Dev
        environment: 'development'
        pool:
          vmImage: 'ubuntu-latest'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2
                  displayName: "Downloading build artifacts"
                  inputs:
                    buildType: current
                    targetPath: '$(System.ArtifactsDirectory)'

                - task: AzureRmWebAppDeployment@4
                  inputs:
                    ConnectionType: AzureRM
                    azureSubscription: '$(azureSubscription)'
                    appType: webAppLinux
                    WebAppName: '$(webAppNameDev)'
                    packageForLinux: '$(System.ArtifactsDirectory)/drop/$(Build.BuildId).dev.zip'
                    StartupCommand: 'node index.js'
                    ScriptType: 'Inline Script'
                    InlineScript: 'npm install'

  - stage: buildQA
    displayName: 'Build React App'
    dependsOn: deployDev
    condition: succeeded()

    jobs:
      - job: 'build'
        variables:
          REACT_APP_HELLO: 'Running on QA'
        steps:
          - task: NodeTool@0
            inputs: 
              versionSpec: '10.x'
        
          - script: |
              cd $(srcFolder)
              npm install
              npm run build          
            displayName: 'Install and Build'

          - task: CopyFiles@2
            displayName: 'Copy build output'
            inputs:
              SourceFolder: '$(srcFolder)/build'
              Contents: '**/*'
              TargetFolder: '$(Build.ArtifactStagingDirectory)'

          - task: ArchiveFiles@2
            displayName: 'Archive output'
            inputs:
              rootFolderOrFile: $(Build.ArtifactStagingDirectory)
              archiveType: 'zip'
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).QA.zip'
              includeRootFolder: false

          - task: PublishBuildArtifacts@1
            inputs:
              pathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).QA.zip'

  - stage: buildQA
    displayName: 'Deploy QA'
    dependsOn: deployDev
    condition: succeeded()

    jobs:
      - deployment: deploy
        displayName: Deploy to QA
        environment: 'QA'
        pool:
          vmImage: 'ubuntu-latest'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2
                  displayName: "Downloading build artifacts"
                  inputs:
                    buildType: current
                    targetPath: '$(System.ArtifactsDirectory)'

                - task: AzureRmWebAppDeployment@4
                  inputs:
                    ConnectionType: AzureRM
                    azureSubscription: '$(azureSubscription)'
                    appType: webAppLinux
                    WebAppName: '$(webAppNameQa)'
                    packageForLinux: '$(System.ArtifactsDirectory)/drop/$(Build.BuildId).QA.zip'
                    StartupCommand: 'node index.js'
                    ScriptType: 'Inline Script'
                    InlineScript: 'npm install'
                    